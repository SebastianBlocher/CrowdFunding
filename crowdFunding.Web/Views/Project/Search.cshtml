@model ProjectSearchViewModel
@{
    ViewData["Title"] = "Search";
}

@if (Model.ProjectList.Count == 0)
{
    <div class="alert alert-warning" role="alert">
        Oops! Looks like we couldn’t find any results. Why not change some things around or broaden your search?

        Search project 
    </div>

    return;
}

@if (Model.ProjectList == null)
{
    <div class="alert alert-warning" role="alert">
        Invalid Search Parameters
    </div>

    return;
}

<div class="row">
    @foreach (var p in Model.ProjectList)
    {
        <div class="col-md-4">
            <div class="card mb-2 shadow mb-5 bg-white rounded">
                <!-- Card image -->
                <img class="card-img-top img-fluid project_photo" src="@p.Photos.ElementAt(0).Url"
                     alt="Image can not be displayed" width="400" height="250">
                <!-- Card content -->
                <div class="card-body">
                    <!-- Title -->
                    <a href="@Url.Action("Details", "Project", new { id = p.ProjectId })">@p.Name</a>
                    <!-- Text -->
                    <p class="card-text mt-2">@p.Description</p>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">
                            by <a href="@Url.Action("Details", "User", new { id = p.UserId })">
                                @p.User.FirstName @p.User.LastName
                            </a>
                        </li>
                        <li class="list-group-item">@p.AmountGathered €</li>
                        <li class="list-group-item">@p.Percentage() funded</li>
                    </ul>
                    <a href="@Url.Action("Search", "Project", new { category = p.Category})" class="nav-link text-dark mt-4"><u>@p.Category</u></a>                   
                </div>
            </div>
        </div>
    }

</div>
